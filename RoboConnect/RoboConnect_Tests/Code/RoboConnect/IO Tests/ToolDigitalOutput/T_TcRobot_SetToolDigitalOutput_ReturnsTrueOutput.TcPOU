<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="T_TcRobot_SetToolDigitalOutput_ReturnsTrueOutput" Id="{f1401383-e3b9-4426-85fd-872a75782e33}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_RoboConnect_SetToolDigitalOutput_ReturnsTrueOutput EXTENDS T_UnitTestBase
VAR
  robot : I_RoboConnect;
  timeOutTimer : TON;
  targetDO : UINT;
  myTestState, prevState :
    (INIT,
    ARRANGE,
    ACT,
    ASSERT) := INIT;
  expected, actual : BOOL;
  counter : UINT;
  returnedTask : I_Task;
  resultTask : I_BoolResultTask;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE myTestState OF
  INIT:
    StateChanged();
    myTestState := ARRANGE;

  ARRANGE:
    IF StateChanged() THEN
      expected := TRUE;
      robot.Connect();
    END_IF

    IF robot.Connected THEN
      myTestState := ACT;
    END_IF

  ACT:
    robot.SetToolDigitalOutput(targetDO, TRUE, task => returnedTask);
    myTestState := ASSERT;

  ASSERT:

    IF timeOutTimer.Q THEN
      actual := robot.GetToolDigitalOutput(targetDO, task => resultTask);
      assertion.AssertEquals_BOOL(expected, actual, 'actual := robot.GetToolDigitalOutput(targetDO, task => resultTask)');
      TestFinished();
      myTestState := INIT;

    END_IF

END_CASE

timeOutTimer(IN := myTestState = ASSERT);]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{2c6f643c-0e4d-4e26-9653-51401b119ca0}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
  bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
  TestSuite : tcl_SimpleUnitTestLibrary.I_TestSuite;
  robot : I_TcRobot;
  timeout : TIME;
  targetDo : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.robot := robot;
THIS^.timeOutTimer.PT := timeout;
THIS^.targetDo := targetDo;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateChanged" Id="{9dfc1334-eab7-4422-920e-e45206bd298a}">
      <Declaration><![CDATA[METHOD PRIVATE StateChanged : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  myTestState = prevState THEN
  RETURN;
END_IF

prevState := myTestState;
StateChanged := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WaitForCycles" Id="{00522937-c4ee-4b21-8129-422ae3c0d30f}">
      <Declaration><![CDATA[METHOD WaitForCycles : BOOL
VAR_INPUT
  maxCount : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[counter := counter + 1;

IF counter = maxCount THEN
  counter := 0;
  WaitForCycles := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_TcRobot_SetToolDigitalOutput_ReturnsTrueOutput">
      <LineId Id="3" Count="30" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetToolDigitalOutput_ReturnsTrueOutput.FB_init">
      <LineId Id="3" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetToolDigitalOutput_ReturnsTrueOutput.StateChanged">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetToolDigitalOutput_ReturnsTrueOutput.WaitForCycles">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>