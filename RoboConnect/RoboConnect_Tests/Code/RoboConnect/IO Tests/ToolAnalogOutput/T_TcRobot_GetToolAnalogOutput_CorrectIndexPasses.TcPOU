<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="T_TcRobot_GetToolAnalogOutput_CorrectIndexPasses" Id="{925e86fb-740c-4c52-b729-612d88e93e49}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_RoboConnect_GetToolAnalogOutput_CorrectIndexPasses EXTENDS T_UnitTestBase
VAR
  robot : I_RoboConnect;
  targetDO : UINT;
  myTestState, prevState :
    (INIT, ARRANGE, ACT, ASSERT) := INIT;
  expected, actual : BOOL;
  counter : UINT;
  returnedTask : I_Task;
  resultTask : I_NumberResultTask;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE myTestState OF
  INIT:
    StateChanged();
    myTestState := ARRANGE;

  ARRANGE:
    IF StateChanged() THEN
      expected := TRUE;
      myTestState := ACT;
    END_IF

  ACT:
    actual := robot.GetToolAnalogOutput(targetDO, task => resultTask);
    myTestState := ASSERT;

  ASSERT:
    assertion.AssertEquals_BOOL(expected, actual, 'robot.GetToolAnalogOutput(targetDO, task => returnedTask)');
    TestFinished();
    myTestState := INIT;

END_CASE]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{eefac3ea-9e1b-42d6-a699-ecfa9636923e}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
  bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
  TestSuite : tcl_SimpleUnitTestLibrary.I_TestSuite;
  robot : I_TcRobot;
  targetDo : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.robot := robot;
THIS^.targetDo := targetDo;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateChanged" Id="{3f8d866b-fa1a-4b93-9375-5f4ddee40bb6}">
      <Declaration><![CDATA[METHOD PRIVATE StateChanged : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  myTestState = prevState THEN
  RETURN;
END_IF

prevState := myTestState;
StateChanged := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WaitForCycles" Id="{cb210165-7639-4e7d-9f91-bd614178cf8b}">
      <Declaration><![CDATA[METHOD WaitForCycles : BOOL
VAR_INPUT
  maxCount : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[counter := counter + 1;

IF counter = maxCount THEN
  counter := 0;
  WaitForCycles := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_TcRobot_GetToolAnalogOutput_CorrectIndexPasses">
      <LineId Id="3" Count="19" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_GetToolAnalogOutput_CorrectIndexPasses.FB_init">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_GetToolAnalogOutput_CorrectIndexPasses.StateChanged">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_GetToolAnalogOutput_CorrectIndexPasses.WaitForCycles">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>