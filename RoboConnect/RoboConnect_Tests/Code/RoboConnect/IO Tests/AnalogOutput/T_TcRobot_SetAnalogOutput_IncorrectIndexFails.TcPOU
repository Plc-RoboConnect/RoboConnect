<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="T_TcRobot_SetAnalogOutput_IncorrectIndexFails" Id="{e2c7152e-3137-4385-a83c-540e4744b3fa}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_RoboConnect_SetAnalogOutput_IncorrectIndexFails EXTENDS T_UnitTestBase
VAR
  robot : I_RoboConnect;
  targetDO : UINT;
  myTestState, prevState :
    (INIT, ARRANGE, ACT, ASSERT) := INIT;
  expected: BOOL;
  actual : BOOL := TRUE;
  counter : UINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE myTestState OF
  INIT:
    StateChanged();
    myTestState := ARRANGE;

  ARRANGE:
    IF StateChanged() THEN
      expected := FALSE;
      myTestState := ACT;
    END_IF

  ACT:
    actual := robot.SetAnalogOutput(targetDO, 0.5);
    myTestState := ASSERT;

  ASSERT:
    assertion.AssertEquals_BOOL(expected, actual, 'robot.SetAnalogOutput(targetDO,TRUE)');
    TestFinished();
    myTestState := INIT;

END_CASE
]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{a2f15066-30cc-4036-ba6c-0588bc1818ec}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
  bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
  TestSuite : tcl_SimpleUnitTestLibrary.I_TestSuite;
  robot : I_TcRobot;
  targetDo : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.robot := robot;
THIS^.targetDo := targetDo;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateChanged" Id="{16d7f861-c8b9-4e41-9af2-2a648325b71c}">
      <Declaration><![CDATA[METHOD PRIVATE StateChanged : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  myTestState = prevState THEN
  RETURN;
END_IF

prevState := myTestState;
StateChanged := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WaitForCycles" Id="{eacc52c5-2185-4a59-8337-6be53c7e0fa4}">
      <Declaration><![CDATA[METHOD WaitForCycles : BOOL
VAR_INPUT
  maxCount : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[counter := counter + 1;

IF counter = maxCount THEN
  counter := 0;
  WaitForCycles := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_TcRobot_SetAnalogOutput_IncorrectIndexFails">
      <LineId Id="3" Count="20" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetAnalogOutput_IncorrectIndexFails.FB_init">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetAnalogOutput_IncorrectIndexFails.StateChanged">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_TcRobot_SetAnalogOutput_IncorrectIndexFails.WaitForCycles">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>