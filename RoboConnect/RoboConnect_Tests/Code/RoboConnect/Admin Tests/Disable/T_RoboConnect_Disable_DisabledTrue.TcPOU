<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="T_RoboConnect_Disable_DisabledTrue" Id="{4c3f9973-2148-4cd2-882a-cb98937eab9f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_RoboConnect_Disable_DisabledTrue EXTENDS T_UnitTestBase
VAR
  _robot : I_RoboConnect;
  myTestState, prevState : (ARRANGE, ACT, ASSERT);
  actual : STRING;
  expected : STRING := '0';
  resultTask : I_Task;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE myTestState OF
  ARRANGE:
    StateChanged();
    myTestState := ACT;

  ACT:
  IF StateChanged() THEN
    _robot.Enable(task => resultTask);
    
	ELSIF NOT resultTask.Busy THEN
        myTestState := ASSERT;
  END_IF
  
  ASSERT:
    actual := resultTask.ErrorId;
    assertion.AssertEquals_STRING(expected, actual, 'actual := _robot.Enabled;');
    myTestState := ARRANGE;
    TestFinished();
END_CASE]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{052b93a1-6931-4e8d-b9a6-62937e920c39}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
  bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
  TestSuite : I_TestSuite;
  robot : I_TcRobot;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_robot := robot;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateChanged" Id="{d8eefbad-9f84-4b47-9867-fa5e9e8d3271}">
      <Declaration><![CDATA[METHOD PRIVATE StateChanged : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  myTestState = prevState THEN
  RETURN;
END_IF

prevState := myTestState;
StateChanged := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WaitForCycles" Id="{a389c1c7-12d4-4474-9563-3cd40f44f142}">
      <Declaration><![CDATA[METHOD WaitForCycles : BOOL
VAR_INPUT
  maxCount : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[counter := counter + 1;

IF counter = maxCount THEN
  counter := 0;
  WaitForCycles := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_RoboConnect_Disable_DisabledTrue">
      <LineId Id="3" Count="17" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_RoboConnect_Disable_DisabledTrue.FB_init">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_RoboConnect_Disable_DisabledTrue.StateChanged">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_RoboConnect_Disable_DisabledTrue.WaitForCycles">
      <LineId Id="3" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>