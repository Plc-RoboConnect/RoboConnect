<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="T_TcRobot_ClearError_ErrorId0" Id="{f01c96cf-cae9-4e60-b9ce-354d888b9f50}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_TcRobot_ClearError_ErrorId0 EXTENDS T_UnitTestBase
VAR
  _robot : I_TcRobot;
  myTestState, prevState : (ARRANGE, ACT, ASSERT);
  actual : STRING;
  expected : STRING := '0';
  resultTask : I_Task;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE myTestState OF
  ARRANGE:
    StateChanged();
    myTestState := ACT;

  ACT:
  IF StateChanged() THEN
    _robot.ClearError(task => resultTask);
    
	ELSIF NOT resultTask.Busy THEN
        myTestState := ASSERT;
  END_IF
  
  ASSERT:
    actual := resultTask.ErrorId;
    assertion.AssertEquals_STRING(expected, actual, 'actual := resultTask.ErrorId');
    myTestState := ARRANGE;
    TestFinished();
END_CASE]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{85f9debb-f004-4b17-8ca4-2ed6644540fe}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
  bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
  bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
  TestSuite : I_TestSuite;
  robot : I_TcRobot;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_robot := robot;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StateChanged" Id="{e6bafc0f-501c-460f-a26a-eb881161b845}">
      <Declaration><![CDATA[METHOD PRIVATE StateChanged : BOOL

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF  myTestState = prevState THEN
  RETURN;
END_IF

prevState := myTestState;
StateChanged := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="WaitForCycles" Id="{cf2e5a84-334b-4aa9-8423-5257ff6d9222}">
      <Declaration><![CDATA[METHOD WaitForCycles : BOOL
VAR_INPUT
  maxCount : UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[counter := counter + 1;

IF counter = maxCount THEN
  counter := 0;
  WaitForCycles := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>